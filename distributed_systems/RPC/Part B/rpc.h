/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPC_H_RPCGEN
#define _RPC_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct y_vector {
	struct {
		u_int data_len;
		int *data_val;
	} data;
	int length;
};
typedef struct y_vector y_vector;

struct min_max {
	int values[2];
};
typedef struct min_max min_max;

struct scale_result {
	struct {
		u_int scale_input_len;
		double *scale_input_val;
	} scale_input;
	int length;
};
typedef struct scale_result scale_result;

struct scale_input {
	double a;
	struct {
		u_int data_len;
		int *data_val;
	} data;
	int length;
};
typedef struct scale_input scale_input;

#define calc_mean_PROG 0x20000000
#define calc_mean_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define calc_mean 1
extern  double * calc_mean_1(y_vector *, CLIENT *);
extern  double * calc_mean_1_svc(y_vector *, struct svc_req *);
extern int calc_mean_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define calc_mean 1
extern  double * calc_mean_1();
extern  double * calc_mean_1_svc();
extern int calc_mean_prog_1_freeresult ();
#endif /* K&R C */

#define calc_min_max_PROG 0x20001000
#define calc_min_max_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define FIND_MIN_MAX 2
extern  min_max * find_min_max_1(y_vector *, CLIENT *);
extern  min_max * find_min_max_1_svc(y_vector *, struct svc_req *);
extern int calc_min_max_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define FIND_MIN_MAX 2
extern  min_max * find_min_max_1();
extern  min_max * find_min_max_1_svc();
extern int calc_min_max_prog_1_freeresult ();
#endif /* K&R C */

#define calc_scale_PROG 0x20002000
#define calc_scale_result_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define SCALE_MULTIPLY 3
extern  scale_result * scale_multiply_1(scale_input *, CLIENT *);
extern  scale_result * scale_multiply_1_svc(scale_input *, struct svc_req *);
extern int calc_scale_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define SCALE_MULTIPLY 3
extern  scale_result * scale_multiply_1();
extern  scale_result * scale_multiply_1_svc();
extern int calc_scale_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_y_vector (XDR *, y_vector*);
extern  bool_t xdr_min_max (XDR *, min_max*);
extern  bool_t xdr_scale_result (XDR *, scale_result*);
extern  bool_t xdr_scale_input (XDR *, scale_input*);

#else /* K&R C */
extern bool_t xdr_y_vector ();
extern bool_t xdr_min_max ();
extern bool_t xdr_scale_result ();
extern bool_t xdr_scale_input ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RPC_H_RPCGEN */
